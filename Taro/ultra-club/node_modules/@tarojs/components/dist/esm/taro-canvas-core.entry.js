import { r as registerInstance, c as createEvent, h, g as getElement } from './core-42efd82a.js';

const LONG_TAP_DELAY = 500;
const Canvas = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.width = 300;
        this.height = 150;
        this.onTouchStart = () => {
            this.timer = setTimeout(() => {
                this.onLongTap.emit();
            }, LONG_TAP_DELAY);
        };
        this.onTouchMove = () => {
            clearTimeout(this.timer);
        };
        this.onTouchEnd = () => {
            clearTimeout(this.timer);
        };
        this.onLongTap = createEvent(this, "longtap", 7);
    }
    componentDidLoad() {
        const { width, height } = this.el.getBoundingClientRect();
        this.width = width;
        this.height = height;
        this.klass = this.el.className;
        this.css = this.el.style.cssText;
    }
    componentDidUpdate() {
        const { width, height } = this.el.getBoundingClientRect();
        if (this.width !== width)
            this.width = width;
        if (this.height !== height)
            this.height = height;
        if (this.canvas) {
            this.canvas.className = this.el.className;
            this.canvas.style.cssText = this.el.style.cssText;
        }
    }
    render() {
        const { canvasId, width, height } = this;
        return (h("canvas", { "canvas-id": canvasId, ref: node => (this.canvas = node), width: width, height: height, onTouchStart: this.onTouchStart, onTouchMove: this.onTouchMove, onTouchEnd: this.onTouchEnd }));
    }
    get el() { return getElement(this); }
    static get style() { return "taro-canvas-core{position:relative;display:block;width:300px;height:150px}"; }
};

export { Canvas as taro_canvas_core };
