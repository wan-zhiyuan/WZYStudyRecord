import { r as registerInstance, c as createEvent, h, g as getElement } from './core-42efd82a.js';

const Switch = class {
    constructor(hostRef) {
        registerInstance(this, hostRef);
        this.type = 'switch';
        this.checked = false;
        this.color = '#04BE02';
        this.switchChange = e => {
            e.stopPropagation();
            const value = e.target.checked;
            this.isChecked = value;
            this.onChange.emit({
                value
            });
        };
        this.onChange = createEvent(this, "change", 7);
    }
    function(newVal, oldVal) {
        if (newVal !== oldVal)
            this.isChecked = newVal;
    }
    componentWillLoad() {
        this.isChecked = this.checked;
    }
    componentDidLoad() {
        Object.defineProperty(this.el, 'value', {
            get: () => this.isChecked,
            configurable: true
        });
    }
    render() {
        const { type, color, isChecked, name } = this;
        const style = isChecked
            ? {
                borderColor: color || '04BE02',
                backgroundColor: color || '04BE02'
            }
            : {};
        return (h("input", { type: 'checkbox', class: `weui-${type}`, style: style, checked: isChecked, name: name, onChange: this.switchChange }));
    }
    get el() { return getElement(this); }
    static get watchers() { return {
        "checked": ["function"]
    }; }
    static get style() { return "taro-switch-core{display:inline-block;width:52px;height:32px}taro-switch-core .weui-switch{display:block;width:100%;height:100%}"; }
};

export { Switch as taro_switch_core };
