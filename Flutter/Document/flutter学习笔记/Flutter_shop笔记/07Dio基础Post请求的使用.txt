class HomePage extends StatefulWidget {
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  TextEditingController typeController = TextEditingController();
  String showText = '欢迎您来到美好人间会所'; // 显示的文本

  @override
  Widget build(BuildContext context) {
    return Container(
        child: Scaffold(
          appBar: AppBar(
          title: Text('美好人间'),
          ),
          body: SingleChildScrollView( // 外层套一个SingleChildScrollView解决界面显示不下，超出多少
            child: Container(
            child: Column(
              children: <Widget>[
                TextField(
                  controller: typeController,
                  decoration: InputDecoration(
                  // 文本框修饰
                  contentPadding: EdgeInsets.all(10.0),
                  labelText: '美女类型', // label标题
                  helperText: '请输入你喜欢的类型', // 文字提示hint
                ),
              autofocus: false, // 自动对焦关闭，避免软键盘弹出
                ),
                RaisedButton(
                  onPressed: _choiceAction,
                  child: Text('选择完毕'),
                ),
                Text(
                  showText,
                  overflow: TextOverflow.ellipsis, // 文本超出部分显示省略号
                  maxLines: 1,
                ),
                ],
              ),
            ),
          ),
      ));
  }

  void _choiceAction() {
    print('开始选择你喜欢的类型...............');
    if (typeController.text.toString() == '') {
      showDialog(
          context: context,
          builder: (context) => AlertDialog(
                title: Text('美女类型不能为空'),
              ));
    } else {
      getHttp(typeController.text.toString()).then((val) {
        setState(() {
          showText = val['data']['name'].toString(); // 获取返回数据中data数据中的name的值
        });
      });
    }
  }

  // 请求远程服务器
  Future getHttp(String Typetext) async {
    try {
      Response response;
      var data = {'name': Typetext};
      response = await Dio().post(
          "https://www.easy-mock.com/mock/5c60131a4bed3a6342711498/baixing/post_dabaojian", // js胖的接口
          // "https://www.easy-mock.com/mock/5c861198ca680c727a91d356/dabaojian_post", // 自己mock的接口
          queryParameters: data);
      return response.data;
    } catch (e) {
      return print(e);
    }
  }
}