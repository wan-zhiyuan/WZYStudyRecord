Stack布局（层叠布局）
代码：双组件层叠
class MyApp extends StatelessWidget{
  @override
  Widget build(BuildContext context){
    var stack = new Stack(
      alignment: const FractionalOffset(0.5, 0.8),// 对齐属性，针对层叠数组里面的第二个组件的对齐
      children: <Widget>[
        new CircleAvatar(
          backgroundImage: new NetworkImage('https://jspang.com/static//myimg/blogtouxiang.jpg'),
          radius: 100.0,
        ),// 圆形头像组件
        new Container(
          decoration: new BoxDecoration(
            color: Colors.lightBlue,
          ),
          padding: EdgeInsets.all(5.0),
          child: Text("嘿嘿，胖子"),
        ),
      ],
    );
    return MaterialApp(
      title: 'Row Widget Demo',
      home: Scaffold(
        appBar: new AppBar(title: new Text('层叠布局'),),
        body:Center(
          child: stack,
        ), 
      ),
    );
  }
}

1、CircleAvatar组件
	经常被用来作头像，使用方式如下：
	new CircleAvatar(
		backgroundImage:new NetworkIamge('src'),
		radius:100.0,// 设置圆形的弧度
	),
2、alignment属性
	建议在两个内容层叠的时候使用
	alignment:const FractionalOffset(x,y)
	两个值分别代表x轴距离y轴距离，都是从上层容器的左上角开始计算

代码：多组件层叠，使用Positioed组件，两个以上层叠时使用
    var stack = new Stack(
      alignment: const FractionalOffset(0.5, 0.8),// 对齐属性，针对层叠数组里面的第二个组件的对齐
      children: <Widget>[
        new CircleAvatar(
          backgroundImage: new NetworkImage('https://jspang.com/static//myimg/blogtouxiang.jpg'),
          radius: 100.0,
        ),// 圆形头像组件
        new Positioned(
          top: 50.0,
          left: 60.0,
          child: new Text('ibarrel.com'),
        ),
        new Positioned(
          bottom: 10.0,
          right: 10.0,
          child: new Text('爱杯'),
        ),
      ],
    );
 3、Positioned组件的属性
 bottom:距离层叠组件下边的距离；
 left:距离层叠组件左边的距离。
 top:距离层叠组建上边的距离
 right:距离层叠组件右边的距离
 width:层叠定位组件的宽度
 height:层叠定位组件的高度

